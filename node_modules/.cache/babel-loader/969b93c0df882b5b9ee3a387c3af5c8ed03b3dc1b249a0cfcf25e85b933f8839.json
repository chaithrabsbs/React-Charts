{"ast":null,"code":"var _jsxFileName = \"/Users/chaithrabs/Desktop/REACT/React-Charts/my-charts/src/Charts/BarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement);\nconst BarChart = () => {\n  _s();\n  const [chart, setChart] = useState({});\n  var baseUrl = \"https://isro.vercel.app/api/customer_satellites\";\n  //var proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  //var apiKey = \"coinrankingcd3247826e38ad88dbf23524973a66d248515bf99960a1b2\";\n\n  //const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch('https://isro.vercel.app/api/customer_satellites').then(response => {\n      if (response.ok) {\n        response.json().then(json => {\n          console.log(json.data);\n          setChart(json.data);\n        });\n      }\n    }).catch(error => console.error(error));\n  }, []);\n  // .then(response => response.json())\n  // .then(json => setChart(json))\n  //  .catch(error => console.error(error));\n  //}, []);\n  //   useEffect(() => {\n  //     const fetchCoins = async () => {\n  //       await fetch(`${baseUrl}`)\n  //         .then((response) => {\n  //           if (response.ok) {\n  //             response.json().then((json) => {\n  //               console.log(json.data);\n  //               setChart(json.data)\n  //             });\n  //           }\n  //         }).catch((error) => {\n  //           console.log(error);\n  //         });\n  //     };\n  //     fetchCoins()\n  //   }, [baseUrl])\n\n  console.log(\"chart\", chart);\n  var data = {\n    labels: chart === null || chart === void 0 ? void 0 : chart.map(x => x.launcher),\n    datasets: [{\n      label: `${chart === null || chart === void 0 ? void 0 : chart.length} Coins Available`,\n      data: chart === null || chart === void 0 ? void 0 : chart.map(x => x.mass),\n      backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n      borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n      borderWidth: 1\n    }]\n  };\n  var options = {\n    maintainAspectRatio: false,\n    scales: {},\n    legend: {\n      labels: {\n        fontSize: 25\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      height: 400,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"ip4zykqV5S/78tH8IJvHUJRfpBU=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","BarElement","CategoryScale","LinearScale","Bar","jsxDEV","_jsxDEV","register","BarChart","_s","chart","setChart","baseUrl","fetch","then","response","ok","json","console","log","data","catch","error","labels","map","x","launcher","datasets","label","length","mass","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","scales","legend","fontSize","children","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chaithrabs/Desktop/REACT/React-Charts/my-charts/src/Charts/BarChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  Chart as ChartJS,\n\n  BarElement,\n  CategoryScale,\n  LinearScale,\n\n} from 'chart.js';\n\nimport { Bar } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n  BarElement,\n);\n\n\nconst BarChart = () => {\n  const [chart, setChart] = useState({})\n  var baseUrl = \"https://isro.vercel.app/api/customer_satellites\";\n  //var proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  //var apiKey = \"coinrankingcd3247826e38ad88dbf23524973a66d248515bf99960a1b2\";\n\n  //const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch('https://isro.vercel.app/api/customer_satellites')\n    .then((response) => {\n        if (response.ok) {\n            response.json().then((json) => {\n                     console.log(json.data);\n                    setChart(json.data)\n                         });\n        } \n    }).catch(error => console.error(error));\n}, []);\n     // .then(response => response.json())\n     // .then(json => setChart(json))\n    //  .catch(error => console.error(error));\n  //}, []);\n//   useEffect(() => {\n//     const fetchCoins = async () => {\n//       await fetch(`${baseUrl}`)\n//         .then((response) => {\n//           if (response.ok) {\n//             response.json().then((json) => {\n//               console.log(json.data);\n//               setChart(json.data)\n//             });\n//           }\n//         }).catch((error) => {\n//           console.log(error);\n//         });\n//     };\n//     fetchCoins()\n//   }, [baseUrl])\n\n  console.log(\"chart\", chart);\n  var data = {\n    labels: chart?.map(x => x.launcher),\n    datasets: [{\n      label: `${chart?.length} Coins Available`,\n      data: chart?.map(x => x.mass),\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)',\n        'rgba(255, 159, 64, 0.2)'\n      ],\n      borderColor: [\n        'rgba(255, 99, 132, 1)',\n        'rgba(54, 162, 235, 1)',\n        'rgba(255, 206, 86, 1)',\n        'rgba(75, 192, 192, 1)',\n        'rgba(153, 102, 255, 1)',\n        'rgba(255, 159, 64, 1)'\n      ],\n      borderWidth: 1\n    }]\n  };\n\n  var options = {\n    maintainAspectRatio: false,\n    scales: {\n    },\n    legend: {\n      labels: {\n        fontSize: 25,\n      },\n    },\n  }\n\n  return (\n    <div>\n      <Bar\n        data={data}\n        height={400}\n        options={options}\n\n      />\n    </div>\n  )\n}\n\nexport default BarChart"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,KAAK,IAAIC,OAAO,EAEhBC,UAAU,EACVC,aAAa,EACbC,WAAW,QAEN,UAAU;AAEjB,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtCN,OAAO,CAACO,QAAQ,CACZL,aAAa,EACbC,WAAW,EACbF,UACF,CAAC;AAGD,MAAMO,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,IAAIe,OAAO,GAAG,iDAAiD;EAC/D;EACA;;EAEA;;EAEAd,SAAS,CAAC,MAAM;IACde,KAAK,CAAC,iDAAiD,CAAC,CACvDC,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACbD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAAEG,IAAI,IAAK;UACtBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,IAAI,CAAC;UACvBT,QAAQ,CAACM,IAAI,CAACG,IAAI,CAAC;QACd,CAAC,CAAC;MACnB;IACJ,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAIJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EACD;EACA;EACD;EACF;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEEJ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAET,KAAK,CAAC;EAC3B,IAAIU,IAAI,GAAG;IACTG,MAAM,EAAEb,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEc,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,QAAQ,CAAC;IACnCC,QAAQ,EAAE,CAAC;MACTC,KAAK,EAAG,GAAElB,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB,MAAO,kBAAiB;MACzCT,IAAI,EAAEV,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEc,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACK,IAAI,CAAC;MAC7BC,eAAe,EAAE,CACf,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,0BAA0B,EAC1B,yBAAyB,CAC1B;MACDC,WAAW,EAAE,CACX,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,EACvB,wBAAwB,EACxB,uBAAuB,CACxB;MACDC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EAED,IAAIC,OAAO,GAAG;IACZC,mBAAmB,EAAE,KAAK;IAC1BC,MAAM,EAAE,CACR,CAAC;IACDC,MAAM,EAAE;MACNd,MAAM,EAAE;QACNe,QAAQ,EAAE;MACZ;IACF;EACF,CAAC;EAED,oBACEhC,OAAA;IAAAiC,QAAA,eACEjC,OAAA,CAACF,GAAG;MACFgB,IAAI,EAAEA,IAAK;MACXoB,MAAM,EAAE,GAAI;MACZN,OAAO,EAAEA;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAnC,EAAA,CAvFKD,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAyFd,eAAeA,QAAQ;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}