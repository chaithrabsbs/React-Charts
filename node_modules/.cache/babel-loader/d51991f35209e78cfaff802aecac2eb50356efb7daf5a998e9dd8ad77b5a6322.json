{"ast":null,"code":"// import React, { useState, useEffect } from 'react'\n// import {\n//   Chart as ChartJS,\n\n//   BarElement,\n\n// } from 'chart.js';\n\n// import { Bar } from 'react-chartjs-2';\n\n// ChartJS.register(\n//   BarElement,\n// );\n\n// const BarChart = () => {\n//   //const [chart, setChart] = useState({})\n//   //var baseUrl = \"https://www.carboninterface.com/api/v1/vehicle_makes\";\n//   //var proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n//   //var apiKey = \"Bearer kIcSmE5I0hdwTn6bS9PmA\";\n\n// //   useEffect(() => {\n// //     const fetchData = async () => {\n// //       try {\n// //         const response = await fetch(`${baseUrl}`, {\n// //             method: 'GET',\n// //           headers: {\n// //             'Content-Type': 'application/json',\n// //             'Authorization': `${apiKey}`,\n// //           },\n// //         }).then((response) => {\n// //             if (response.ok) {\n// //               response.json().then((json) => {\n// //                 console.log(json.data);\n// //                 setChart(json.data)\n// //               });\n// //             }\n// //           })\n// //         // Handle the response data here\n// //       } catch (error) {\n// //         // Handle any errors that occur during the request\n// //         console.log(error);\n// //       }\n// //     };\n\n// //     fetchData();\n// //   }, []);\n\n//   //console.log(\"chart\", chart);\n\n//   if (chart !== undefined && chart !== null) {\n//   var data = {\n//     labels: chart?.map(x => x.data.attributes.name),\n//     datasets: [{\n//       label: `${chart?.length} Coins Available`,\n//       data: chart?.map(x => x.data.attributes.number_of_models),\n//       backgroundColor: [\n//         'rgba(255, 99, 132, 0.2)',\n//         'rgba(54, 162, 235, 0.2)',\n//         'rgba(255, 206, 86, 0.2)',\n//         'rgba(75, 192, 192, 0.2)',\n//         'rgba(153, 102, 255, 0.2)',\n//         'rgba(255, 159, 64, 0.2)'\n//       ],\n//       borderColor: [\n//         'rgba(255, 99, 132, 1)',\n//         'rgba(54, 162, 235, 1)',\n//         'rgba(255, 206, 86, 1)',\n//         'rgba(75, 192, 192, 1)',\n//         'rgba(153, 102, 255, 1)',\n//         'rgba(255, 159, 64, 1)'\n//       ],\n//       borderWidth: 1\n//     }]\n//   };\n// }\n\n//   var options = {\n//     maintainAspectRatio: false,\n//     scales: {\n//     },\n//     legend: {\n//       labels: {\n//         fontSize: 25,\n//       },\n//     },\n//   }\n\n//   return (\n//     <div>\n//       <Bar\n//         data={data}\n//         height={400}\n//         options={options}\n\n//       />\n//     </div>\n//   )\n// }\n\n// export default BarChart","map":{"version":3,"names":[],"sources":["/Users/chaithrabs/Desktop/REACT/React-Charts/my-charts/src/Charts/BarChart.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react'\n// import {\n//   Chart as ChartJS,\n\n//   BarElement,\n\n// } from 'chart.js';\n\n// import { Bar } from 'react-chartjs-2';\n\n\n// ChartJS.register(\n//   BarElement,\n// );\n\n\n// const BarChart = () => {\n//   //const [chart, setChart] = useState({})\n//   //var baseUrl = \"https://www.carboninterface.com/api/v1/vehicle_makes\";\n//   //var proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n//   //var apiKey = \"Bearer kIcSmE5I0hdwTn6bS9PmA\";\n\n  \n\n  \n\n\n// //   useEffect(() => {\n// //     const fetchData = async () => {\n// //       try {\n// //         const response = await fetch(`${baseUrl}`, {\n// //             method: 'GET',\n// //           headers: {\n// //             'Content-Type': 'application/json',\n// //             'Authorization': `${apiKey}`,\n// //           },\n// //         }).then((response) => {\n// //             if (response.ok) {\n// //               response.json().then((json) => {\n// //                 console.log(json.data);\n// //                 setChart(json.data)\n// //               });\n// //             }\n// //           })\n// //         // Handle the response data here\n// //       } catch (error) {\n// //         // Handle any errors that occur during the request\n// //         console.log(error);\n// //       }\n// //     };\n  \n// //     fetchData();\n// //   }, []);\n  \n\n\n//   //console.log(\"chart\", chart);\n\n\n//   if (chart !== undefined && chart !== null) {\n//   var data = {\n//     labels: chart?.map(x => x.data.attributes.name),\n//     datasets: [{\n//       label: `${chart?.length} Coins Available`,\n//       data: chart?.map(x => x.data.attributes.number_of_models),\n//       backgroundColor: [\n//         'rgba(255, 99, 132, 0.2)',\n//         'rgba(54, 162, 235, 0.2)',\n//         'rgba(255, 206, 86, 0.2)',\n//         'rgba(75, 192, 192, 0.2)',\n//         'rgba(153, 102, 255, 0.2)',\n//         'rgba(255, 159, 64, 0.2)'\n//       ],\n//       borderColor: [\n//         'rgba(255, 99, 132, 1)',\n//         'rgba(54, 162, 235, 1)',\n//         'rgba(255, 206, 86, 1)',\n//         'rgba(75, 192, 192, 1)',\n//         'rgba(153, 102, 255, 1)',\n//         'rgba(255, 159, 64, 1)'\n//       ],\n//       borderWidth: 1\n//     }]\n//   };\n// }\n\n//   var options = {\n//     maintainAspectRatio: false,\n//     scales: {\n//     },\n//     legend: {\n//       labels: {\n//         fontSize: 25,\n//       },\n//     },\n//   }\n\n//   return (\n//     <div>\n//       <Bar\n//         data={data}\n//         height={400}\n//         options={options}\n\n//       />\n//     </div>\n//   )\n// }\n\n// export default BarChart"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAIA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}