{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale } from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\nChartJS.register(CategoryScale, LinearScale, BarElement);\nconst BarChart = () => {\n  _s();\n  const [chart, setChart] = useState({});\n  var baseUrl = \"https://isro.vercel.app/api/customer_satellites\";\n  //var proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  //var apiKey = \"coinrankingcd3247826e38ad88dbf23524973a66d248515bf99960a1b2\";\n\n  useEffect(() => {\n    const fetchCoins = async () => {\n      await fetch(`${baseUrl}`).then(response => {\n        if (response.ok) {\n          response.json().then(json => {\n            console.log(json.data);\n            setChart(json.data);\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n    fetchCoins();\n  }, [baseUrl]);\n  console.log(\"chart\", chart);\n  //   var data = {\n  //     labels: chart?.map(x => x.launcher),\n  //     datasets: [{\n  //       label: `${chart?.length} Coins Available`,\n  //       data: chart?.map(x => x.mass),\n  //       backgroundColor: [\n  //         'rgba(255, 99, 132, 0.2)',\n  //         'rgba(54, 162, 235, 0.2)',\n  //         'rgba(255, 206, 86, 0.2)',\n  //         'rgba(75, 192, 192, 0.2)',\n  //         'rgba(153, 102, 255, 0.2)',\n  //         'rgba(255, 159, 64, 0.2)'\n  //       ],\n  //       borderColor: [\n  //         'rgba(255, 99, 132, 1)',\n  //         'rgba(54, 162, 235, 1)',\n  //         'rgba(255, 206, 86, 1)',\n  //         'rgba(75, 192, 192, 1)',\n  //         'rgba(153, 102, 255, 1)',\n  //         'rgba(255, 159, 64, 1)'\n  //       ],\n  //       borderWidth: 1\n  //     }]\n  //   };\n\n  //   var options = {\n  //     maintainAspectRatio: false,\n  //     scales: {\n  //     },\n  //     legend: {\n  //       labels: {\n  //         fontSize: 25,\n  //       },\n  //     },\n  //   }\n\n  //   return (\n  //     <div>\n  //       <Bar\n  //         data={data}\n  //         height={400}\n  //         options={options}\n\n  //       />\n  //     </div>\n  //   )\n};\n_s(BarChart, \"ip4zykqV5S/78tH8IJvHUJRfpBU=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","ChartJS","BarElement","CategoryScale","LinearScale","Bar","register","BarChart","_s","chart","setChart","baseUrl","fetchCoins","fetch","then","response","ok","json","console","log","data","catch","error","_c","$RefreshReg$"],"sources":["/Users/chaithrabs/Desktop/REACT/React-Charts/my-charts/src/Charts/BarChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  Chart as ChartJS,\n\n  BarElement,\n  CategoryScale,\n  LinearScale,\n\n} from 'chart.js';\n\nimport { Bar } from 'react-chartjs-2';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n  BarElement,\n);\n\n\nconst BarChart = () => {\n  const [chart, setChart] = useState({})\n  var baseUrl = \"https://isro.vercel.app/api/customer_satellites\";\n  //var proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  //var apiKey = \"coinrankingcd3247826e38ad88dbf23524973a66d248515bf99960a1b2\";\n\n\n  useEffect(() => {\n    const fetchCoins = async () => {\n      await fetch(`${baseUrl}`)\n        .then((response) => {\n          if (response.ok) {\n            response.json().then((json) => {\n              console.log(json.data);\n              setChart(json.data)\n            });\n          }\n        }).catch((error) => {\n          console.log(error);\n        });\n    };\n    fetchCoins()\n  }, [baseUrl])\n\n  console.log(\"chart\", chart);\n//   var data = {\n//     labels: chart?.map(x => x.launcher),\n//     datasets: [{\n//       label: `${chart?.length} Coins Available`,\n//       data: chart?.map(x => x.mass),\n//       backgroundColor: [\n//         'rgba(255, 99, 132, 0.2)',\n//         'rgba(54, 162, 235, 0.2)',\n//         'rgba(255, 206, 86, 0.2)',\n//         'rgba(75, 192, 192, 0.2)',\n//         'rgba(153, 102, 255, 0.2)',\n//         'rgba(255, 159, 64, 0.2)'\n//       ],\n//       borderColor: [\n//         'rgba(255, 99, 132, 1)',\n//         'rgba(54, 162, 235, 1)',\n//         'rgba(255, 206, 86, 1)',\n//         'rgba(75, 192, 192, 1)',\n//         'rgba(153, 102, 255, 1)',\n//         'rgba(255, 159, 64, 1)'\n//       ],\n//       borderWidth: 1\n//     }]\n//   };\n\n//   var options = {\n//     maintainAspectRatio: false,\n//     scales: {\n//     },\n//     legend: {\n//       labels: {\n//         fontSize: 25,\n//       },\n//     },\n//   }\n\n//   return (\n//     <div>\n//       <Bar\n//         data={data}\n//         height={400}\n//         options={options}\n\n//       />\n//     </div>\n//   )\n}\n\nexport default BarChart"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,KAAK,IAAIC,OAAO,EAEhBC,UAAU,EACVC,aAAa,EACbC,WAAW,QAEN,UAAU;AAEjB,SAASC,GAAG,QAAQ,iBAAiB;AAErCJ,OAAO,CAACK,QAAQ,CACZH,aAAa,EACbC,WAAW,EACbF,UACF,CAAC;AAGD,MAAMK,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,IAAIa,OAAO,GAAG,iDAAiD;EAC/D;EACA;;EAGAZ,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,KAAK,CAAE,GAAEF,OAAQ,EAAC,CAAC,CACtBG,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAIA,QAAQ,CAACC,EAAE,EAAE;UACfD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAAEG,IAAI,IAAK;YAC7BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAACG,IAAI,CAAC;YACtBV,QAAQ,CAACO,IAAI,CAACG,IAAI,CAAC;UACrB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;QAClBJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;MACpB,CAAC,CAAC;IACN,CAAC;IACDV,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACD,OAAO,CAAC,CAAC;EAEbO,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEV,KAAK,CAAC;EAC7B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;AACA,CAAC;AAAAD,EAAA,CAvEKD,QAAQ;AAAAgB,EAAA,GAARhB,QAAQ;AAyEd,eAAeA,QAAQ;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}